{"version":3,"sources":["types/FilterType.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterType","actions","todo","type","payload","currentTodoReducer","state","action","filterInitial","query","status","ALL","filterReducer","todos","todosReducer","filter","id","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","className","map","isTodoSelected","classnames","completed","title","onClick","TodoFilter","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","isError","setIsError","selectedTodo","useEffect","fetchTodos","a","userId","data","color","href","email","name","App","filteredTodos","useMemo","length","lowerCaseTitle","toLowerCase","lowerCaseQuery","COMPLETED","includes","ACTIVE","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05201af8.chunk.js","sourcesContent":["export enum FilterType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return null;\n\n    case 'currentTodo/SET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { FilterType } from '../types/FilterType';\n\ntype SetQueryAction = { type: 'filter/SET_QUERY', payload: string };\ntype SetStatusAction = { type: 'filter/SET_STATUS', payload: FilterType };\ntype SetClearAction = { type: 'filter/SET_CLEAR' };\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\nconst setStatus = (status: FilterType): SetStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\nconst setClear = ():SetClearAction => ({\n  type: 'filter/SET_CLEAR',\n});\n\ntype Action = SetQueryAction | SetStatusAction | SetClearAction;\ntype State = { query: string, status: FilterType };\n\nconst filterInitial: State = {\n  query: '',\n  status: FilterType.ALL,\n};\n\nconst filterReducer = (state = filterInitial, action: Action): State => {\n  switch (action.type) {\n    case 'filter/SET_CLEAR':\n      return {\n        ...state,\n        query: '',\n      };\n    case 'filter/SET_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'filter/SET_STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\nexport const actions = { setQuery, setStatus, setClear };\n","import { Todo } from '../types/Todo';\n\ntype SetAction = { type: 'todos/SET', payload: Todo[] };\ntype AddAction = { type: 'todos/ADD', payload: Todo };\ntype RemoveAction = { type: 'todos/REMOVE', payload: Todo };\n\nconst setTodos = (todos: Todo[]): SetAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\nconst addTodo = (todo: Todo): AddAction => ({\n  type: 'todos/ADD',\n  payload: todo,\n});\nconst removeTodo = (todo: Todo): RemoveAction => ({\n  type: 'todos/REMOVE',\n  payload: todo,\n});\n\n  type State = Todo[];\n  type Action = SetAction | AddAction | RemoveAction;\n\nconst todosReducer = (state: State = [], action: Action): Todo[] => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'todos/SET':\n      return [...payload];\n    case 'todos/ADD':\n      return [...state, payload];\n    case 'todos/REMOVE':\n      return state.filter(todo => todo.id !== payload.id);\n    default:\n      return state;\n  }\n};\n\nexport const actions = { setTodos, addTodo, removeTodo };\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport classnames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map((todo) => {\n            const isTodoSelected = currentTodo?.id === todo.id;\n\n            return (\n              <tr\n                data-cy=\"todo\"\n                className={classnames({\n                  'has-background-info-light': isTodoSelected,\n                })}\n                key={todo.id}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={classnames({\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  })}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => dispatch(actions.setTodo(todo))}\n                  >\n                    <span className=\"icon\">\n                      <i className={classnames(\n                        'far',\n                        {\n                          'fa-eye': !isTodoSelected,\n                          'fa-eye-slash': isTodoSelected,\n                        },\n                      )}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { FilterType } from '../../types/FilterType';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(actions.setQuery(event.target.value));\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(actions.setStatus(event.target.value as FilterType));\n  };\n\n  const handleClear = () => dispatch(actions.setClear());\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClear}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { getUser } from '../../api';\nimport { actions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const dispatch = useAppDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      setIsLoading(true);\n      try {\n        if (selectedTodo) {\n          const data = await getUser(selectedTodo.userId);\n\n          setUser(data);\n          setIsLoading(false);\n        }\n      } catch {\n        setIsError(true);\n        setIsLoading(false);\n      }\n    };\n\n    fetchTodos();\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading\n        ? (\n          <Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  return dispatch(actions.removeTodo());\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n              {isError && (\n                <h2 style={{ color: 'red' }}>\n                  An error occured while user loading\n                </h2>\n              )}\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n                { ' by ' }\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\nimport { FilterType } from './types/FilterType';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const { query, status } = useAppSelector(state => state.filter);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getTodos();\n\n        dispatch(actions.setTodos(data));\n        setIsLoading(false);\n      } catch {\n        setIsError(true);\n        setIsLoading(false);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    if (!query.length && status === FilterType.ALL) {\n      return todos;\n    }\n\n    return todos.filter(({ title, completed }) => {\n      const lowerCaseTitle = title.toLowerCase();\n      const lowerCaseQuery = query.toLowerCase();\n\n      switch (status) {\n        case FilterType.COMPLETED:\n          return completed && lowerCaseTitle.includes(lowerCaseQuery);\n\n        case FilterType.ACTIVE:\n          return !completed && lowerCaseTitle.includes(lowerCaseQuery);\n\n        default:\n          return lowerCaseTitle.includes(lowerCaseQuery);\n      }\n    });\n  }, [todos, status, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {isError\n                ? <p>Cant download todos</p>\n                : <TodoList todos={filteredTodos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}